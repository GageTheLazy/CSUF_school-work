while  ==>  Keyword
(  ==>  Delimiter
i  ==>  Identifier
<=  ==>  Operator
5  ==>  Integer
)  ==>  Delimiter
a  ==>  Identifier
=  ==>  Operator
23.00  ==>  Real Expression
;  ==>  Delimiter
if  ==>  Keyword
(  ==>  Delimiter
done  ==>  Identifier
==  ==>  Operator
true  ==>  Keyword
)  ==>  Delimiter
;  ==>  Delimiter
cout  ==>  Identifier
<<  ==>  Operator
"done"  ==>  string
;  ==>  Delimiter
std::cout  ==>  Identifier
<<  ==>  Operator
"ok"  ==>  string
<<  ==>  Operator
i  ==>  Identifier
+  ==>  Operator
10  ==>  Integer
;  ==>  Delimiter
while  ==>  Keyword
(  ==>  Delimiter
i  ==>  Identifier
=  ==>  Operator
200  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
<  ==>  Operator
300  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
++  ==>  Operator
)  ==>  Delimiter
{  ==>  Delimiter
i  ==>  Identifier
++  ==>  Operator
;  ==>  Delimiter
i  ==>  Identifier
+=  ==>  Operator
10  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
+=  ==>  Operator
20  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
+=  ==>  Operator
30  ==>  Integer
;  ==>  Delimiter
}  ==>  Delimiter
bool  ==>  Keyword
isfalse  ==>  Identifier
=  ==>  Operator
false  ==>  Keyword
;  ==>  Delimiter
while  ==>  Keyword
(  ==>  Delimiter
isfalse  ==>  Identifier
!=  ==>  Operator
true  ==>  Keyword
)  ==>  Delimiter
{  ==>  Delimiter
std::cout  ==>  Identifier
<<  ==>  Operator
"Hello"  ==>  string
<<  ==>  Operator
std::endl  ==>  Identifier
;  ==>  Delimiter
std::cout  ==>  Identifier
<<  ==>  Operator
"This is test file 2"  ==>  string
<<  ==>  Operator
std::endl  ==>  Identifier
;  ==>  Delimiter
}  ==>  Delimiter
std::cout  ==>  Identifier
<<  ==>  Operator
"This is test 3"  ==>  string
<<  ==>  Operator
std::endl  ==>  Identifier
;  ==>  Delimiter
std::cout  ==>  Identifier
<<  ==>  Operator
"This file will be less than 30 lines"  ==>  string
<<  ==>  Operator
std::endl  ==>  Identifier
;  ==>  Delimiter
for  ==>  Keyword
(  ==>  Delimiter
int  ==>  Keyword
i  ==>  Identifier
=  ==>  Operator
0  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
<  ==>  Operator
29  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
++  ==>  Operator
)  ==>  Delimiter
{  ==>  Delimiter
i  ==>  Identifier
-=  ==>  Operator
10  ==>  Integer
;  ==>  Delimiter
i  ==>  Identifier
-=  ==>  Operator
15  ==>  Integer
;  ==>  Delimiter
return  ==>  Keyword
;  ==>  Delimiter
}  ==>  Delimiter
